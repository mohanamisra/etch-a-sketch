/* Media Queries start */

@media(max-width: 768px){
    html, body{
        min-width: 768px;
    }

    .heading{
        margin-top: 2rem;
        min-width: 100%;
    }

    .drawing-section{
        /* border: 10px solid red; */
        flex-direction: column-reverse;
    }
    
    .grid{
        /* border: 10px solid red; */
        align-self: center;
        padding: 3rem;
        margin-bottom: 2rem;
        min-height: 650px;
        min-width: 650px;
    }

    .buttons.all{
        display: flex;
        flex-direction: row;
        align-items: center;
        margin-bottom: 3rem;
    }

    .resize-section{
        align-self: flex-end;
    }

    .colour-button{
        height: 3rem;
        font-size: 2rem;
    }
}

/* Media Queries end */


.container{
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    gap: 1rem;
    min-width: 100vw;
}

.heading{
    width: 100vw;
    text-align: center;
    font-size: 6rem;
}

.heading.subtext{
    font-size: 2.5rem;
    padding-bottom: 2rem;
}

.drawing-section{
    display: flex;
    justify-content: space-evenly;

}

.buttons{
    display: flex;
    flex-direction: column;
    justify-content: space-evenly  ;
}

.button-section{
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.colour-button{
    height: 2.5rem;
    font-size: 1.25rem;
}

#white-button{
    background-color: white;
    color: black;
}

.resize-section{
    display: flex;
    gap: 1rem;
}

.grid{
    /* HOW WAS THE GRID MADE RESIZABLE?
        Well, if the grid itself is display:flex, then the columns get appended horizontally. Then you give flex grow of 1 to the columns(to occupy the vertical space). But that was appending only n number of straight columns (instead of a nxn grid). The reason was that column's flex direction was row. On changing it to column, it functioned as a grid again. Then you give flex grow ofo 1 to the boxes too (to occupy the horizontal space). */

    display: flex;
    width: 400px;
    height: 400px;
}

.column{
    display: flex;
    flex-direction: column;
    flex-grow: 1;
}

.box{
    border: 1px solid rgba(255, 255, 255, 0.5);
    /* max-width: 100%; */
    flex-grow: 1;
}

.colour-white{
    background-color: white;
    box-shadow: 2px 2px 15px 5px rgba(255, 255, 255, 0.5);
}

.colour-purple{
    background-color: rgb(185, 33, 226);
    box-shadow: 2px 2px 15px 5px rgba(185, 33, 226, 0.5);
}

.colour-green{
    background-color: rgb(37, 255, 95);
    box-shadow: 2px 2px 15px 5px rgba(37, 255, 95, 0.5);
}

.colour-blue{
    background-color: rgb(41, 162, 255);
    box-shadow: 2px 2px 15px 5px rgba(41, 162, 255, 0.5);
}

.colour-yellow{
    background-color: rgb(254, 239, 31);
    box-shadow: 2px 2px 15px 5px rgba(254, 239, 31, 0.5);
}

.colour-red{
    background-color: rgb(255, 60, 60);
    box-shadow: 2px 2px 15px 5px rgba(255, 60, 60, 0.5);
}

.footer{
    min-width: 100%;
    margin-top: 2rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
    position: fixed;
    bottom: 0;
}

a{
    text-decoration: none;
}